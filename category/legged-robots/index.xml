<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Legged robots | Stefanos Charalambous</title>
    <link>https://scharalambous3.github.io/category/legged-robots/</link>
      <atom:link href="https://scharalambous3.github.io/category/legged-robots/index.xml" rel="self" type="application/rss+xml" />
    <description>Legged robots</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 12 Nov 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://scharalambous3.github.io/media/icon_hub7a1c745800879165a56661b27a6324f_21626_512x512_fill_lanczos_center_3.png</url>
      <title>Legged robots</title>
      <link>https://scharalambous3.github.io/category/legged-robots/</link>
    </image>
    
    <item>
      <title>Exploiting structure to make optimization more tractable</title>
      <link>https://scharalambous3.github.io/post/cdfk/</link>
      <pubDate>Sat, 12 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://scharalambous3.github.io/post/cdfk/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;The dynamics of legged robots are governed by underactuation and discontinuity. For the purpose of this post we circumvent the
discontinuities in the dynamics by modelling the system as hybrid. We
assume a pre-defined mode schedule, so as to not deal with the
combinatorial complexity of footstep planning online and use an optimal
control framework for switched systems [1].&lt;/p&gt;
&lt;p&gt;Even if we have actuators at all internal joints, the pose of the
floating base is not directly actuated so floating base systems such as
legged robots are always underactuated (unless bolted to the ground).
Beyond the fact it&amp;rsquo;s necessary to consider the dynamics in designing
control systems for underactuated systems [2], we can
further exploit the structure of the dynamics to design more efficient
control architectures.&lt;/p&gt;
&lt;p&gt;The whole-body dynamics of a legged robot with n actuated DoF can be
represented using the Lagrangian equations of motion: 


$$\begin{aligned}
\boldsymbol{M} (\boldsymbol{q}) \ \dot{\boldsymbol{v}} + \boldsymbol{b} (\boldsymbol{q}, \boldsymbol{v}) = \begin{bmatrix} \boldsymbol{0}_{6 \times n} \\ \boldsymbol{{I}}_{n \times n} \end{bmatrix} ^ T \ \boldsymbol{\tau} + \boldsymbol{J}_{c}^T (\boldsymbol{q}) \ \boldsymbol{F}_c \\
\label{lagrangian} \end{aligned}$$  where 

 $\boldsymbol{q}$ is the vector of generalized
coordinates, $\boldsymbol{v}$ is the vector of generalized velocities,


 $\boldsymbol{M} (\boldsymbol{q})$  is the configuration-dependent
mass-matrix, 

 $\boldsymbol{b} (\boldsymbol{q}, \boldsymbol{v})$  is the
vector containing all non-linear and gravity effects,


 $\boldsymbol{\tau}$  is the vector of joint torques, 

 $\boldsymbol{J}_{c}$ 
is the geometric Jacobian for the end effectors, and 

 $\boldsymbol{F}_c$ 
is the stacked vector of forces at each end effector. It&#39;s obvious from
the selection matrix 

 $\begin{bmatrix} \boldsymbol{0}_{6 \times n} \\ \boldsymbol{{I}}_{n \times n} \end{bmatrix}$ 
 that the dynamics are underactuated.
Specifically, the dynamics can be split into an unactuated 


 $$\begin{aligned}
\boldsymbol{M}_u (\boldsymbol{q}) \ \dot{\boldsymbol{v}} + \boldsymbol{b}_u (\boldsymbol{q}, \boldsymbol{v}) = \boldsymbol{J}_{c_u}^T (\boldsymbol{q}) \ \boldsymbol{F}_c 
\end{aligned}
\label{unactuated}$$
 

 and an actuated part


 $$\begin{aligned}
\boldsymbol{M}_a (\boldsymbol{q}) \ \dot{\boldsymbol{v}} + \boldsymbol{b}_a (\boldsymbol{q}, \boldsymbol{v}) = \boldsymbol{\tau}_a + \boldsymbol{J}_{c_a}^T (\boldsymbol{q}) \ \boldsymbol{F}_c 
\end{aligned}
\label{actuated}$$
 
Under the assumption of sufficient control authority, this split enables
us to independently consider the unactuated dynamics (or centroidal
dynamics). Considering a simpler model that captures the main dynamics of the system
offers a significant advantage in computational complexity.

Overall we will be solving two smaller optimization
problems that is computationally more tractable than solving a single large
optimization: an optimization of the a simpler that captures the main
dynamics of the system and an optimization of the full-kinematics that must track the centroidal
plan as well as fulfill whole-body tasks.

In other words, by exploiting the structure of the dynamics of the
floating-base system we can decompose the optimization into smaller tractable problems (a centroidal OCP and
a full-kinematics OCP) that interact through a compact reference that captures the main effects of the dynamics (centroidal quantities). The centroidal plan generated from the CD OCP and
the (projected) solution of the FK OCP is used as tracking
reference in the FK OCP and CD OCP respectively. The CD OCP and the FK
OCP must be solved in a loop (&#34;kino-dynamic iteration&#34;) until
consensus is reached with regards to the centroidal quantities.

It&#39;s important to note that the CD state has a dimension of 9, while the
CD input can be represented with a dimension of 6 (a wrench applied at
the CoM). To address this redundancy and have a well-posed optimization
that reaches consensus with the FK OCP it&#39;s necessary to regularize the
angular momentum [3].

The disadvantages of this method is approximately twice more parameters
to tune, and solve times are dependent on how many kino-dynamic
iterations were needed to reach consensus. In addition, special
attention must be paid in the implementation. A real-time iteration
scheme with each optimization running independently is hard to configure
as communication delays can easily lead to divergence (the CD OCP can
run at 100 Hz while the FK OCP at 40 Hz).


&lt;h3&gt;Centroidal Dynamics (CD) OCP&lt;/h3&gt;

In the CD OCP, we consider the unactuated part through the Newton-Euler
equations of the center of mass (CoM): 

 $$\begin{aligned}
\boldsymbol{\dot{h}}_{com} = \begin{bmatrix} \boldsymbol{\dot{p}} \\ m \ \boldsymbol{\dot{l}} \end{bmatrix} = \begin{bmatrix}  \sum_{i=1}^{N}{ \ \boldsymbol{f}_t^{i} \ + m \ \boldsymbol{g}} \\ \sum_{i=1}^{N}{ \ (\boldsymbol{r}_{com \ c_i}^t \times \boldsymbol{f}_t^i)} \end{bmatrix}
\end{aligned}
\label{systemmodelling}$$ 

The state in the CD OCP is the CoM position, 

 $\boldsymbol{c}$ , the
mass-normalized linear momentum, 

 $\boldsymbol{\dot{c}}$ , and the
mass-normalized angular momentum, 

 $\boldsymbol{l}$ :


 $\boldsymbol{X}_{CD} =  \begin{bmatrix} \boldsymbol{c} &amp; \boldsymbol{\dot{c}} &amp; \boldsymbol{l} \end{bmatrix}^T$ .
The input in the CD OCP is the forces applied at the end effectors:


 $\boldsymbol{U}_{CD} = \begin{bmatrix} \boldsymbol{f}_1   ...   \boldsymbol{f}_{ee} \end{bmatrix}^T$ .

The CD OCP is formulated as follows: 

 $$\begin{aligned}
\min_{\boldsymbol{c},\ \boldsymbol{\dot{c}},\ \boldsymbol{l},\ \boldsymbol{f}} \quad &amp; \Phi(\boldsymbol{c}_T, \boldsymbol{\dot{c}}_T, \boldsymbol{l}_T, \boldsymbol{f}_T)+\sum_{t=0}^{T - 1}{L(\boldsymbol{c}_t, \boldsymbol{\dot{c}}_t, \boldsymbol{l}_t, \boldsymbol{f}_t, t)} \\
\textrm{s.t.} \quad &amp; \boldsymbol{c}_{t+1} = \boldsymbol{c}_t + \boldsymbol{\dot{c}}_t \ \Delta t &amp;&amp; \textrm{CoM position dynamics}\\
  &amp; \boldsymbol{\dot{c}}_{t+1} = \boldsymbol{\dot{c}}_t + \sum_{i=1}^{N}{ \ \frac{\boldsymbol{f}_t^{i}}{m}} \ \Delta t + \boldsymbol{g} \ \Delta t &amp;&amp; \textrm{linear momentum dynamics}\\
  &amp; \boldsymbol{l}_{t+1} = \boldsymbol{l}_t + \sum_{i=1}^{N}{ \ (\boldsymbol{r}_{com \ c_i}^t \times \boldsymbol{f}_t^i)} \ \Delta t &amp;&amp; \textrm{angular momentum dynamics}\\
%  &amp; \forall t,i \quad f_{t, z}^i \geq 0 &amp;&amp; \textrm{\cancel{unilateral contact}}\\
%  &amp; \forall t \quad \boldsymbol{c}_t \in \Omega &amp;&amp; \textrm{kinematic constraint}\\
  &amp; \boldsymbol{c}_{0}, \boldsymbol{\dot{c}}_{0} = \hat{\boldsymbol{c}}_0, \hat{\mathbf{\dot{c}}}_0 &amp;&amp; \textrm{initial conditions}\\
 % &amp; \forall t, i \quad \sqrt{(f_{t, x}^i)^2 + (f_{t, y}^i)^2} \leq \mu \ f_{t, z}^i &amp;&amp; \textrm{friction cone}\\
 &amp; \forall t, i \quad |(f_{t, x}^i)| \leq \mu \ f_{t, z}^i, |(f_{t, y}^i)| \leq \mu \ f_{t, z}^i &amp;&amp; \textrm{friction pyramid (stance)}\\
 &amp; \forall t, i \quad \boldsymbol{f}_t^i = \boldsymbol{0} &amp;&amp; \textrm{zero force (swing)}\\
\end{aligned}
\label{centroidal}$$ 

where



 $$\begin{aligned}
L(\boldsymbol{c}, \boldsymbol{\dot{c}}, \boldsymbol{l}, \boldsymbol{f}, t) = &amp; (\boldsymbol{X}_{CD} - \boldsymbol{X}_{CD, ref})^T \ \boldsymbol{Q} \ (\boldsymbol{X}_{CD} - \boldsymbol{X}_{CD, ref})  + \\ &amp; \boldsymbol{U}_{CD}^T \ \boldsymbol{R} \ \boldsymbol{U}_{CD}
\end{aligned}$$ 

References (abbreviated as &#34;ref&#34;) are constructed from FK solution
(abbreviated as &#34;FK sol&#34;) :



 $$\begin{aligned}
\boldsymbol{c}_{ref} =   \boldsymbol{c}(\boldsymbol{q}_{FK sol})
\end{aligned}$$ 



 $$\begin{aligned}
 \begin{bmatrix} \boldsymbol{\dot{c}}_{ref} \\  \boldsymbol{l}_{ref} \end{bmatrix} = \frac{\boldsymbol{A}(\boldsymbol{q}_{FK sol}) \ \boldsymbol{v}_{FK sol}}{m}
\end{aligned}$$ 

&lt;h3&gt;Full-Kinematics (FK) OCP&lt;/h3&gt;

State of FK problem is defined to be: 

 $$\begin{aligned}
\boldsymbol{X}_{FK} =   \begin{bmatrix}  \boldsymbol{q}  \\ \boldsymbol{\dot{q}} \end{bmatrix} = \begin{bmatrix} \boldsymbol{q}_b \\ \boldsymbol{q}_j  \\ \boldsymbol{\dot{q}}_b \\ \boldsymbol{\dot{q}}_j \end{bmatrix}
\end{aligned}$$ 

Input of FK problem is defined to be: 

 $$\begin{aligned}
\boldsymbol{U}_{FK} = \boldsymbol{\ddot{q}} = \begin{bmatrix}  \boldsymbol{\ddot{q}}_b \\  \boldsymbol{\ddot{q}}_j   \end{bmatrix}
\end{aligned}$$ 

FK problem is formulated as follows: 

 $$\begin{aligned}
\min_{\boldsymbol{q}, \boldsymbol{v}, \boldsymbol{\dot{v}}} \quad &amp; \sum_{t=0}^{T}{L(\boldsymbol{q}_t, \boldsymbol{v}_t, \boldsymbol{\dot{v}}_t, t) + L_{mom}(\boldsymbol{q}_t, \boldsymbol{v}_t, t) + L_{com}(\boldsymbol{q}_t, t) + L_{eff}(\boldsymbol{q}_t, \boldsymbol{v}_t, t) } \\
\textrm{s.t.} \quad \boldsymbol{q}_{t+1} &amp; = \boldsymbol{q}_t + \boldsymbol{v}_t \ \Delta t \\
   \boldsymbol{v}_{t+1} &amp; = \boldsymbol{v}_t + \boldsymbol{\dot{v}}_t \ \Delta t \\
   \boldsymbol{q}_0, \boldsymbol{v}_0 &amp; = \boldsymbol{\hat{q}}_0, \boldsymbol{\hat{v}}_0 \qquad \textrm{initial conditions}\\
   \ldots{} &amp;  \qquad \textrm{zero acceleration (stance)}     \\
   \ldots{}  &amp; \qquad \textrm{normal acceleration (swing)}      \\
   \\
\textrm{where} \quad
L(\boldsymbol{q}, \boldsymbol{v}, \boldsymbol{\dot{v}}, t) &amp; = (\boldsymbol{X}_{FK} - \boldsymbol{X}_{FK, ref})^T \ Q \ (\boldsymbol{X}_{FK} - \boldsymbol{X}_{FK, ref}) + {\boldsymbol{\dot{v}}}^T R \boldsymbol{\dot{v}} \\
\\
L_{mom}(\boldsymbol{q}, \boldsymbol{v}, t) &amp; = \| \boldsymbol{A}(\boldsymbol{q}) \ \boldsymbol{v} - \boldsymbol{h}_{com, ref} \|^2 \\
\\
L_{com}(\boldsymbol{q}, t) &amp; = \| \boldsymbol{c}(\boldsymbol{q}) - \boldsymbol{c}_{ref} \|^2 \\
\\
L_{eff}(\boldsymbol{q}, \boldsymbol{v}, t) &amp; = \| \boldsymbol{r}_{{I} \ c_i} (\boldsymbol{q}) - \boldsymbol{r}_{{I} \  c_i, ref} \|^2 \  + \| \boldsymbol{\dot{r}}_{{I} \ c_i} (\boldsymbol{v}) \|^2  \  \\
\end{aligned}
\label{IK}$$ 
References are constructed from CD solution (&#34;CD sol&#34;) :



 $$\begin{aligned}
\boldsymbol{c}_{ref} = \boldsymbol{c}_{CD \ sol}
\end{aligned}$$ 



 $$\begin{aligned}
\boldsymbol{h}_{com, ref} =  \begin{bmatrix} m \ \boldsymbol{\dot{c}}_{CD sol} \\ m \ \boldsymbol{l}_{CD sol} \end{bmatrix}
\end{aligned}$$ 



 $$\begin{aligned}
 \boldsymbol{X}_{FK, ref} =\begin{bmatrix} \boldsymbol{q}_{b, ref} \\ \boldsymbol{q}_{j, ref}  \\ \boldsymbol{\dot{q}}_{b, ref} \\ \boldsymbol{\dot{q}}_{j, ref} \end{bmatrix} =   \begin{bmatrix} -  \\ \boldsymbol{q}_{j, nominal} \\ - \\ \boldsymbol{0} \end{bmatrix}
\end{aligned}$$ 

&lt;h3&gt;Unconstrained inverse dynamics&lt;/h3&gt;



 $$\boldsymbol{\tau}_{RNEA} = \boldsymbol{M}_a (\boldsymbol{q}) \ \boldsymbol{\dot{v}} + \boldsymbol{b}_a (\boldsymbol{q}, \boldsymbol{v}) - \boldsymbol{J}_{c_a}^T (\boldsymbol{q}) \ \boldsymbol{F_c}
\label{invdyn}$$ 

&lt;h3&gt;Low-level controller&lt;/h3&gt;



 $$\boldsymbol{\tau}_{j} = \boldsymbol{\tau}_{RNEA, j} + k_p (\boldsymbol{q}_{d, j} - \boldsymbol{q}_{a, j}) + k_a (\boldsymbol{v}_{d, j} - \boldsymbol{v}_{a, j})
\label{ctrler}$$ 


[1] &#34;OCS2: An open source library for optimal control of switched
systems,&#34; [Online]. Available: https://github.com/leggedrobotics/ocs2.
&lt;br&gt;
[2] Russ Tedrake. Underactuated Robotics: Algorithms for Walking, Running,
Swimming, Flying, and Manipulation (Course Notes for MIT 6.832).
Downloaded on 12/10/2022 from https://underactuated.csail.mit.edu/
&lt;br&gt;
[3] R. Budhiraja, J. Carpentier, and N. Mansard, &#34;Dynamics consensus between
cen- troidal and whole-body models for locomotion of legged robots,&#34; in
International Conference on Robotics and Automation, 2019, pp.
6727--6733.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
